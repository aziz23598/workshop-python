import numpy as np
a = np.array([0, 1, 2, 3])
a

#1-D
a = np.array([0, 1, 2, 3])
a
a.ndim
a.shape
len(a)

#2-D
b = np.array([[0, 1, 2], [3, 4, 5]])    # 2 x 3 array
b
b.ndim
b.shape
len(b)     # returns the size of the first dimension
c = np.array([[[1], [2]], [[3], [4]]])
c
c.shape

a = np.arange(10) # 0 .. n-1  (!)
a
b = np.arange(1, 9, 2) # start, end (exclusive), step
b

c = np.linspace(0, 1, 6)   # start, end, num-points
c
d = np.linspace(0, 1, 5, endpoint=False)
d

a = np.ones((3, 3))  # reminder: (3, 3) is a tuple
a
b = np.zeros((2, 2))
b
c = np.eye(3)
c
d = np.diag(np.array([1, 2, 3, 4]))
d

a = np.random.rand(4)       # uniform in [0, 1]
a  
b = np.random.randn(4)      # Gaussian
b  

a = np.array([1, 2, 3])
a.dtype
b = np.array([1., 2., 3.])
b.dtype

c = np.array([1, 2, 3], dtype=float)
c.dtype

a = np.ones((3, 3))
a.dtype

d = np.array([1+2j, 3+4j, 5+6*1j])
d.dtype

e = np.array([True, False, False, True])
e.dtype

f = np.array(['Bonjour', 'Hello', 'Hallo'])
f.dtype 

import matplotlib.pyplot as plt 
 x = np.linspace(0, 3, 20)
y = np.linspace(0, 9, 20)
plt.plot(x, y)       # line plot    
plt.show()
plt.plot(x, y, 'o')
plt.show()

image = np.random.rand(30, 30)
plt.imshow(image, cmap=plt.cm.hot)    
plt.colorbar() 

a = np.arange(10)
a
a[0], a[2], a[-1]

a[::-1]

a = np.diag(np.arange(3))
a
a[1, 1]
a[2, 1] = 10 # third line, second column
a
a[1]

a = np.arange(10)
a
a[2:9:3]

a[:4]

a[1:3]
a[::2]
a[3:]

a = np.arange(10)
a[5:] = 10
a
b = np.arange(5)
a[5:] = b[::-1]

a = np.arange(10)
a
b = a[::2]
b
np.may_share_memory(a, b)
b[0] = 12
b
a   # (!)
a = np.arange(10)
c = a[::2].copy()  # force a copy
c[0] = 12
a
np.may_share_memory(a, c)

np.random.seed(3)
a = np.random.randint(0, 21, 15)
a
(a % 3 == 0)
mask = (a % 3 == 0)
extract_from_a = a[mask] # or,  a[a%3==0]
extract_from_a   

a[a % 3 == 0] = -1
a

a = np.arange(0, 100, 10)
a

a[[2, 3, 2, 4, 2]]

a[[9, 7]] = -100
a

